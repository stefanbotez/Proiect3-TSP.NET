//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace P1.Data
{
    using System.Runtime.Serialization;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Media", Namespace = "http://schemas.datacontract.org/2004/07/P1.Data", IsReference = true)]
    public partial class Media : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private System.DateTime Creation_DateField;

        private string DescriptionField;

        private int IdField;

        private bool IsDeletedField;

        private string PathField;

        private System.Collections.Generic.List<P1.Data.Tags> TagsField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Creation_Date
        {
            get
            {
                return this.Creation_DateField;
            }
            set
            {
                this.Creation_DateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted
        {
            get
            {
                return this.IsDeletedField;
            }
            set
            {
                this.IsDeletedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path
        {
            get
            {
                return this.PathField;
            }
            set
            {
                this.PathField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<P1.Data.Tags> Tags
        {
            get
            {
                return this.TagsField;
            }
            set
            {
                this.TagsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Tags", Namespace = "http://schemas.datacontract.org/2004/07/P1.Data", IsReference = true)]
    public partial class Tags : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private int IdField;

        private P1.Data.Media MediaField;

        private int MediaIdField;

        private string NameField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public P1.Data.Media Media
        {
            get
            {
                return this.MediaField;
            }
            set
            {
                this.MediaField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MediaId
        {
            get
            {
                return this.MediaIdField;
            }
            set
            {
                this.MediaIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName = "IMediaTags")]
public interface IMediaTags
{

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceMedia/GetMedia", ReplyAction = "http://tempuri.org/InterfaceMedia/GetMediaResponse")]
    P1.Data.Media GetMedia(int id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceMedia/GetMedia", ReplyAction = "http://tempuri.org/InterfaceMedia/GetMediaResponse")]
    System.Threading.Tasks.Task<P1.Data.Media> GetMediaAsync(int id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceMedia/GetAllMedia", ReplyAction = "http://tempuri.org/InterfaceMedia/GetAllMediaResponse")]
    System.Collections.Generic.List<P1.Data.Media> GetAllMedia();

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceMedia/GetAllMedia", ReplyAction = "http://tempuri.org/InterfaceMedia/GetAllMediaResponse")]
    System.Threading.Tasks.Task<System.Collections.Generic.List<P1.Data.Media>> GetAllMediaAsync();

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceMedia/QueryMedia", ReplyAction = "http://tempuri.org/InterfaceMedia/QueryMediaResponse")]
    System.Collections.Generic.List<P1.Data.Media> QueryMedia(string toSearch);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceMedia/QueryMedia", ReplyAction = "http://tempuri.org/InterfaceMedia/QueryMediaResponse")]
    System.Threading.Tasks.Task<System.Collections.Generic.List<P1.Data.Media>> QueryMediaAsync(string toSearch);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceMedia/QueryMediaDate", ReplyAction = "http://tempuri.org/InterfaceMedia/QueryMediaDateResponse")]
    System.Collections.Generic.List<P1.Data.Media> QueryMediaDate(string toSearch, System.DateTime from, System.DateTime to);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceMedia/QueryMediaDate", ReplyAction = "http://tempuri.org/InterfaceMedia/QueryMediaDateResponse")]
    System.Threading.Tasks.Task<System.Collections.Generic.List<P1.Data.Media>> QueryMediaDateAsync(string toSearch, System.DateTime from, System.DateTime to);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceMedia/AddMedia", ReplyAction = "http://tempuri.org/InterfaceMedia/AddMediaResponse")]
    P1.Data.Media AddMedia(P1.Data.Media entity);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceMedia/AddMedia", ReplyAction = "http://tempuri.org/InterfaceMedia/AddMediaResponse")]
    System.Threading.Tasks.Task<P1.Data.Media> AddMediaAsync(P1.Data.Media entity);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceMedia/DeleteMedia", ReplyAction = "http://tempuri.org/InterfaceMedia/DeleteMediaResponse")]
    void DeleteMedia(int id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceMedia/DeleteMedia", ReplyAction = "http://tempuri.org/InterfaceMedia/DeleteMediaResponse")]
    System.Threading.Tasks.Task DeleteMediaAsync(int id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceMedia/GetMediaByPath", ReplyAction = "http://tempuri.org/InterfaceMedia/GetMediaByPathResponse")]
    P1.Data.Media GetMediaByPath(string path);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceMedia/GetMediaByPath", ReplyAction = "http://tempuri.org/InterfaceMedia/GetMediaByPathResponse")]
    System.Threading.Tasks.Task<P1.Data.Media> GetMediaByPathAsync(string path);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceMedia/UpdateMedia", ReplyAction = "http://tempuri.org/InterfaceMedia/UpdateMediaResponse")]
    void UpdateMedia(P1.Data.Media entity);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceMedia/UpdateMedia", ReplyAction = "http://tempuri.org/InterfaceMedia/UpdateMediaResponse")]
    System.Threading.Tasks.Task UpdateMediaAsync(P1.Data.Media entity);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceMedia/AddTagToMedia", ReplyAction = "http://tempuri.org/InterfaceMedia/AddTagToMediaResponse")]
    P1.Data.Media AddTagToMedia(P1.Data.Media media, P1.Data.Tags tag);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceMedia/AddTagToMedia", ReplyAction = "http://tempuri.org/InterfaceMedia/AddTagToMediaResponse")]
    System.Threading.Tasks.Task<P1.Data.Media> AddTagToMediaAsync(P1.Data.Media media, P1.Data.Tags tag);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceMedia/RemoveTagFromMedia", ReplyAction = "http://tempuri.org/InterfaceMedia/RemoveTagFromMediaResponse")]
    P1.Data.Media RemoveTagFromMedia(string path, int tagId);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceMedia/RemoveTagFromMedia", ReplyAction = "http://tempuri.org/InterfaceMedia/RemoveTagFromMediaResponse")]
    System.Threading.Tasks.Task<P1.Data.Media> RemoveTagFromMediaAsync(string path, int tagId);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceTags/GetTag", ReplyAction = "http://tempuri.org/InterfaceTags/GetTagResponse")]
    P1.Data.Tags GetTag(int id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceTags/GetTag", ReplyAction = "http://tempuri.org/InterfaceTags/GetTagResponse")]
    System.Threading.Tasks.Task<P1.Data.Tags> GetTagAsync(int id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceTags/QueryTags", ReplyAction = "http://tempuri.org/InterfaceTags/QueryTagsResponse")]
    System.Collections.Generic.List<int> QueryTags(string toSearch);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceTags/QueryTags", ReplyAction = "http://tempuri.org/InterfaceTags/QueryTagsResponse")]
    System.Threading.Tasks.Task<System.Collections.Generic.List<int>> QueryTagsAsync(string toSearch);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceTags/GetAllTags", ReplyAction = "http://tempuri.org/InterfaceTags/GetAllTagsResponse")]
    System.Collections.Generic.List<P1.Data.Tags> GetAllTags();

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceTags/GetAllTags", ReplyAction = "http://tempuri.org/InterfaceTags/GetAllTagsResponse")]
    System.Threading.Tasks.Task<System.Collections.Generic.List<P1.Data.Tags>> GetAllTagsAsync();

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceTags/AddTag", ReplyAction = "http://tempuri.org/InterfaceTags/AddTagResponse")]
    P1.Data.Tags AddTag(P1.Data.Tags entity);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceTags/AddTag", ReplyAction = "http://tempuri.org/InterfaceTags/AddTagResponse")]
    System.Threading.Tasks.Task<P1.Data.Tags> AddTagAsync(P1.Data.Tags entity);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceTags/DeleteTag", ReplyAction = "http://tempuri.org/InterfaceTags/DeleteTagResponse")]
    void DeleteTag(int id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceTags/DeleteTag", ReplyAction = "http://tempuri.org/InterfaceTags/DeleteTagResponse")]
    System.Threading.Tasks.Task DeleteTagAsync(int id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceTags/GetTagByName", ReplyAction = "http://tempuri.org/InterfaceTags/GetTagByNameResponse")]
    System.Collections.Generic.List<P1.Data.Tags> GetTagByName(string name);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceTags/GetTagByName", ReplyAction = "http://tempuri.org/InterfaceTags/GetTagByNameResponse")]
    System.Threading.Tasks.Task<System.Collections.Generic.List<P1.Data.Tags>> GetTagByNameAsync(string name);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMediaTags/Complete", ReplyAction = "http://tempuri.org/IMediaTags/CompleteResponse")]
    void Complete();

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMediaTags/Complete", ReplyAction = "http://tempuri.org/IMediaTags/CompleteResponse")]
    System.Threading.Tasks.Task CompleteAsync();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IMediaTagsChannel : IMediaTags, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class MediaTagsClient : System.ServiceModel.ClientBase<IMediaTags>, IMediaTags
{

    public MediaTagsClient()
    {
    }

    public MediaTagsClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
    {
    }

    public MediaTagsClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public MediaTagsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public MediaTagsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
    {
    }

    public P1.Data.Media GetMedia(int id)
    {
        return base.Channel.GetMedia(id);
    }

    public System.Threading.Tasks.Task<P1.Data.Media> GetMediaAsync(int id)
    {
        return base.Channel.GetMediaAsync(id);
    }

    public System.Collections.Generic.List<P1.Data.Media> GetAllMedia()
    {
        return base.Channel.GetAllMedia();
    }

    public System.Threading.Tasks.Task<System.Collections.Generic.List<P1.Data.Media>> GetAllMediaAsync()
    {
        return base.Channel.GetAllMediaAsync();
    }

    public System.Collections.Generic.List<P1.Data.Media> QueryMedia(string toSearch)
    {
        return base.Channel.QueryMedia(toSearch);
    }

    public System.Threading.Tasks.Task<System.Collections.Generic.List<P1.Data.Media>> QueryMediaAsync(string toSearch)
    {
        return base.Channel.QueryMediaAsync(toSearch);
    }

    public System.Collections.Generic.List<P1.Data.Media> QueryMediaDate(string toSearch, System.DateTime from, System.DateTime to)
    {
        return base.Channel.QueryMediaDate(toSearch, from, to);
    }

    public System.Threading.Tasks.Task<System.Collections.Generic.List<P1.Data.Media>> QueryMediaDateAsync(string toSearch, System.DateTime from, System.DateTime to)
    {
        return base.Channel.QueryMediaDateAsync(toSearch, from, to);
    }

    public P1.Data.Media AddMedia(P1.Data.Media entity)
    {
        return base.Channel.AddMedia(entity);
    }

    public System.Threading.Tasks.Task<P1.Data.Media> AddMediaAsync(P1.Data.Media entity)
    {
        return base.Channel.AddMediaAsync(entity);
    }

    public void DeleteMedia(int id)
    {
        base.Channel.DeleteMedia(id);
    }

    public System.Threading.Tasks.Task DeleteMediaAsync(int id)
    {
        return base.Channel.DeleteMediaAsync(id);
    }

    public P1.Data.Media GetMediaByPath(string path)
    {
        return base.Channel.GetMediaByPath(path);
    }

    public System.Threading.Tasks.Task<P1.Data.Media> GetMediaByPathAsync(string path)
    {
        return base.Channel.GetMediaByPathAsync(path);
    }

    public void UpdateMedia(P1.Data.Media entity)
    {
        base.Channel.UpdateMedia(entity);
    }

    public System.Threading.Tasks.Task UpdateMediaAsync(P1.Data.Media entity)
    {
        return base.Channel.UpdateMediaAsync(entity);
    }

    public P1.Data.Media AddTagToMedia(P1.Data.Media media, P1.Data.Tags tag)
    {
        return base.Channel.AddTagToMedia(media, tag);
    }

    public System.Threading.Tasks.Task<P1.Data.Media> AddTagToMediaAsync(P1.Data.Media media, P1.Data.Tags tag)
    {
        return base.Channel.AddTagToMediaAsync(media, tag);
    }

    public P1.Data.Media RemoveTagFromMedia(string path, int tagId)
    {
        return base.Channel.RemoveTagFromMedia(path, tagId);
    }

    public System.Threading.Tasks.Task<P1.Data.Media> RemoveTagFromMediaAsync(string path, int tagId)
    {
        return base.Channel.RemoveTagFromMediaAsync(path, tagId);
    }

    public P1.Data.Tags GetTag(int id)
    {
        return base.Channel.GetTag(id);
    }

    public System.Threading.Tasks.Task<P1.Data.Tags> GetTagAsync(int id)
    {
        return base.Channel.GetTagAsync(id);
    }

    public System.Collections.Generic.List<int> QueryTags(string toSearch)
    {
        return base.Channel.QueryTags(toSearch);
    }

    public System.Threading.Tasks.Task<System.Collections.Generic.List<int>> QueryTagsAsync(string toSearch)
    {
        return base.Channel.QueryTagsAsync(toSearch);
    }

    public System.Collections.Generic.List<P1.Data.Tags> GetAllTags()
    {
        return base.Channel.GetAllTags();
    }

    public System.Threading.Tasks.Task<System.Collections.Generic.List<P1.Data.Tags>> GetAllTagsAsync()
    {
        return base.Channel.GetAllTagsAsync();
    }

    public P1.Data.Tags AddTag(P1.Data.Tags entity)
    {
        return base.Channel.AddTag(entity);
    }

    public System.Threading.Tasks.Task<P1.Data.Tags> AddTagAsync(P1.Data.Tags entity)
    {
        return base.Channel.AddTagAsync(entity);
    }

    public void DeleteTag(int id)
    {
        base.Channel.DeleteTag(id);
    }

    public System.Threading.Tasks.Task DeleteTagAsync(int id)
    {
        return base.Channel.DeleteTagAsync(id);
    }

    public System.Collections.Generic.List<P1.Data.Tags> GetTagByName(string name)
    {
        return base.Channel.GetTagByName(name);
    }

    public System.Threading.Tasks.Task<System.Collections.Generic.List<P1.Data.Tags>> GetTagByNameAsync(string name)
    {
        return base.Channel.GetTagByNameAsync(name);
    }

    public void Complete()
    {
        base.Channel.Complete();
    }

    public System.Threading.Tasks.Task CompleteAsync()
    {
        return base.Channel.CompleteAsync();
    }
}
